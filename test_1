import math

MENU = {
    "espresso": {
        "ingredients": {
            "water": 50,
            "coffee": 18,
        },
        "cost": 1.5,
    },
    "latte": {
        "ingredients": {
            "water": 200,
            "milk": 150,
            "coffee": 24,
        },
        "cost": 2.5,
    },
    "cappuccino": {
        "ingredients": {
            "water": 250,
            "milk": 100,
            "coffee": 24,
        },
        "cost": 3.0,
    }
}

resources = {
    "water": 300,
    "milk": 200,
    "coffee": 100,
}

resources_sufficient = False


# TODO. 5 Process coins
def take_coins():
    print("Please insert coins.")
    quarters = int(input("How many quarters?: "))
    dimes = int(input("How many dimes?: "))
    nickels = int(input("How many nickles?: "))
    pennies = int(input("How many pennies?: "))
    return quarters * 0.25 + dimes * 0.1 + nickels * 0.05 + pennies * 0.01


def add_profit(moneyadded):
    global resources
    resources["money"] = moneyadded


def report():
    global resources
    print(
        f"Water: {resources['water']}ml\nMilk: {resources['milk']}ml\nCoffee: {resources['coffee']}g\nMoney: ${resources['money']}")


def make_coffee():
    off = False
    if not off:
        global resources
        # TODO: 3. Print report of all coffee machine resources
        # print(resources)

        # TODO: 1. Prompt user by asking "What would you like? (espresso/latte/cappuccino): ‚Äù
        cust_selection = input("What would you like? (espresso/latte/cappuccino)")

        # TODO: 4. Check resources sufficient to make drink order.
        for i in resources:
            if resources[i] < MENU[cust_selection]["ingredients"][i]:  # means we cant make the drink
                print(f"Sorry there is not enough {i}")
                return
                # resources_sufficient = True #not sure if i wanna use it yet
            else:
                coins = take_coins()
                if coins < MENU[cust_selection]["cost"]:
                    print("Sorry that's not enough money. Money refunded.")
                    return  # exit?
                elif coins == MENU[cust_selection]["cost"]:
                    # take money
                    add_profit(MENU[cust_selection]["cost"])
                    report()
                else:
                    # subtract money and give refund
                    change = math.ceil(coins - MENU[cust_selection]["cost"])
                    add_profit(math.ceil(MENU[cust_selection]["cost"]))
                    print(f"Here is ${change} dollars in change.")
                    report()
                # resources = {i: resources[i] - MENU[cust_selection]["ingredients"].get(i, 0) for i in resources}

                # print(resources) #checking we subtracted it correctly

                want_report = input("Report?")
                if want_report == "report":
                    print(report)
    onoff = input("on off?")
    if onoff == "off":
        off = True
        return


make_coffee()


# while not off
# TODO: 6. Check transaction successful?
